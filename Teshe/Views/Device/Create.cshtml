@model Teshe.Models.Device
@using Teshe.Models;
@using System.Collections.Generic;
@{
    ViewBag.Title = "添加设备";
}
@Styles.Render("~/Content/uploadify.css")
@Scripts.Render("~/Scripts/uploadify/jquery.uploadify.min.js")
@Scripts.Render("~/Scripts/My97DatePicker/WdatePicker.js")
@UIHelper.ShowUploadify("file_upload")
<script>
    function Create() {
        var a = Math.floor(Math.random() * 100000000)
        while (a < 10000000) {
            a = a * 10;
        }
        $("#Barcode").val(a);
        var code = $("#Barcode").val();
        $("#BarcodeImg").attr("src", "/Device/CreateBarcode?code=" + code);
        //$.ajax({
        //    type: "POST",
        //    url: "/DeviceCotroller/CreateBarcode?code=" + code,
        //    success: function (results) {
        //        $("Barcode").attr("src", "/Device/CreateBarcode?code=" + code);
        //    }
        //}
        //)
    }
    function AddAttribute() {
        var name = $("#attributeName").val();
        var value = $("#attributeValue").val();
        var html = $("#attributes").html();
        $("#attributes").html(html + " <tr> <td>属性名：</td><td class=\"attr\">" + name + "</td><td>属性值：</td><td class=\"attr\">" + value + "</td></tr>");
        $("#attributesJson").val(GetAttributeJson());
    }
    function GetAttributeJson() {
        var json = "[";
        var sign = 0;
        $("#attributes tr .attr").each(function () {
            if (sign % 2 == 0) {
                json += "{\"Name\":" + "\"" + $(this).html() + "\",";
            }
            else {
                json += "\"Content\":" + "\"" + $(this).html() + "\"},";
            }
            sign++;
        });
        json = json.substring(0, json.length - 1);
        json += "]";
        return json;
    }
    //function Submit() {
    //    $('#form1').form('submit', {
    //        url: '/Device/Create',
    //        data: "attributes=" + GetAttributeJson(),
    //        onSubmit: function () {
    //            return true;
    //        },
    //        success: function (results) {
    //            $.messager.alert('成功', results);
    //        }

    //    }
    //    )
    //}
</script>
@using (Html.BeginForm("form1"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.Model)
            @Html.TextBoxFor(model => model.Model, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Model)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.Company)
            @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Company)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.District)
            @Html.TextBoxFor(model => model.District, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.District)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.City)
            @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.City)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.Province)
            @Html.TextBoxFor(model => model.Province, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Province)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.ManufactureDate)
            @Html.TextBoxFor(model => model.ManufactureDate, new { onfocus = "WdatePicker()", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ManufactureDate)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.Factory)
            @Html.TextBoxFor(model => model.Factory, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Factory)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.SetupTime)
            @Html.TextBoxFor(model => model.SetupTime, new { onfocus = "WdatePicker()", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SetupTime)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.ExplosionProof)
            @Html.DropDownListFor(model => model.ExplosionProof, (List<SelectListItem>)ViewBag.ExplosionProofList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExplosionProof)
        </div>


    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.SecurityCertificateNo)
            @Html.TextBoxFor(model => model.SecurityCertificateNo, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SecurityCertificateNo)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.CheckState)
            @Html.DropDownListFor(model => model.CheckState, (List<SelectListItem>)ViewBag.CheckStateList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CheckState)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.CheckTime)
            @Html.TextBoxFor(model => model.CheckTime, new { onfocus = "WdatePicker()", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CheckTime)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.CheckCycle)
            @Html.TextBoxFor(model => model.CheckCycle, new { @class = "form-control" })*单位为天
                    @Html.ValidationMessageFor(model => model.CheckCycle)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.UseState)
            @Html.DropDownListFor(model => model.UseState, (List<SelectListItem>)ViewBag.UseStateList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UseState)
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.MaintenanceRecord)
            @Html.TextBoxFor(model => model.MaintenanceRecord, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaintenanceRecord)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-8">
            @Html.LabelFor(model => model.Remarks)
            @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @*@Html.LabelFor(model => model.Attributes)*@
            @Html.Label("属性名称", new { name = "attributeName" })
            @Html.TextBox("attributeName", "", new { @class = "form-control" })
        </div>
        <div class="form-group col-sm-4">
            @Html.Label("属性内容", new { name = "attributeValue" })
            @Html.TextBox("attributeValue", "", new { @class = "form-control" })
        </div>
        <div style="padding-top: 24px;" class="form-group col-sm-2">
            <a style="height: 33px; font-size: 14px; line-height: 29px" href="javascript:void(0)" class="easyui-linkbutton" onclick="AddAttribute()">添加属性</a>
            @Html.Hidden("attributesJson")
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-8">
            <table id="attributes">
            </table>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.PhotoUrl)
            @Html.TextBox("fileName", "", new { @class = "form-control" })
            @Html.HiddenFor(model => model.PhotoUrl)
            @Html.ValidationMessageFor(model => model.PhotoUrl)
            <input type="file" name="file_upload" id="file_upload" />
        </div>
        <div class="form-group col-sm-4">
            @Html.LabelFor(model => model.Barcode)
            @Html.TextBoxFor(model => model.Barcode, new { @class = "form-control" })
            <input id="CreateBarcode" name="Code" type="button" value="生成条形码" class="btn btn-default" onclick="Create()" />
            @Html.ValidationMessageFor(model => model.Barcode)
            <img id="BarcodeImg" src="" alt="条形码图片" width="187" height="131" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-4">
            <input type="submit" value="添加设备" class="btn btn-default" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
